#SAMPLE HASH SHA256:04C9CC0D1577D5EE54A4E2D4DD12F17011D13703CDD0E6EFD46718D14FD9AA87

import pefile
import struct

data = open(b'path//to//file', 'rb').read()
pe = pefile.PE(data=data)
edata = b''
for s in pe.sections:
    if b'.edata' in s.Name:
        edata = s.get_data()

def rc4crypt(data, key):
    #If the input is a string convert to byte arrays
    if type(data) == str:
        data = data.encode('utf-8')
    if type(key) == str:
        key = key.encode('utf-8')
    x = 0
    box = list(range(256))
    for i in range(256):
        x = (x + box[i] + key[i % len(key)]) % 256
        box[i], box[x] = box[x], box[i]
    x = 0
    y = 0
    out = []
    for c in data:
        x = (x + 1) % 256
        y = (y + box[x]) % 256
        box[x], box[y] = box[y], box[x]
        out.append(c ^ box[(box[x] + box[y]) % 256])
    return bytes(out)

l = ['\nDecryption key:', '\nPublic Key:','\nOther IOC:', '\nOther IOC:', '\nAttacker Message']


blocks = edata.split(b'\x00\x00')
blocks = [b for b in blocks if b != b'']
key = blocks[0]
#blocks_sorted = sorted(blocks, key=len)
blocks.pop(0)
blocks.pop(3)
blocks.pop(4)
#print(blocks[5])

for i in range(len(blocks)):
        out = rc4crypt(blocks[i], key)
        print(l[i])
        print(out + b'\r\n')
